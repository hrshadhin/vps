---
- block:
    - name: Get wireguard private key
      slurp:
        src: "{{ wg_conf_dir }}/privatekey"
      register: wg_privatekey

    - name: Get wireguard public key
      slurp:
        src: "{{ wg_conf_dir }}/publickey"
      register: wg_publickey

    - block:
        - name: Get wireguard server public IPv4
          uri:
            url: "https://ipinfo.io/ip"
            remote_src: yes
            return_content: yes
          register: wg_register_public_ipv4

        - name: Set wireguard server public IPv4
          set_fact:
            wg_server_public_ip: "{{wg_register_public_ipv4.content}}"
      when: wg_server_public_ip == ""

    - name: Generate Wireguard server config
      template:
        src: "wg0_server.j2"
        dest: "{{ wg_conf_dir }}/wg0.conf"
        mode: 0640
        backup: yes
      notify: restart wg0
  tags: wg-config

- name: Start Wireguard server
  systemd:
    name: "wg-quick@wg0"
    state: started
    enabled: yes

- name: Generate Wireguard user config
  template:
    src: "wg0_user.j2"
    dest: "{{ wg_conf_dir }}/{{ item.item.value.username }}/wg0.conf"
  loop: "{{ wg_user_privatekey.results }}"
  loop_control:
    label: "{{ item.item.value.username }}"
  register: wg_user_profile
  when: (item.item.value.remove == False)
  notify: restart wg0
  tags: wg-config
