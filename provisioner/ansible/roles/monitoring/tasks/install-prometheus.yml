---
- name: create prometheus system group
  group:
    name: prometheus
    system: true
    state: present

- name: create prometheus system user
  user:
    name: prometheus
    system: true
    shell: "/usr/sbin/nologin"
    group: prometheus
    createhome: false
    home: "{{ prometheus_db_dir }}"

- name: create prometheus data directory
  file:
    path: "{{ prometheus_db_dir }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- name: create prometheus configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: prometheus
    mode: 0770
  with_items:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/file_sd"

- block:
    - name: "Get checksum list"
      set_fact:
        __prometheus_checksums: "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true

    - name: "Get checksum for {{ go_arch }} architecture"
      set_fact:
        __prometheus_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __prometheus_checksums }}"
      when:
        - "('linux-' + go_arch + '.tar.gz') in item"
  delegate_to: localhost
  when: monitoring_download_binary

- name: download prometheus binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ __prometheus_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
  when: monitoring_download_binary

- name: unpack prometheus binaries
  become: false
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"
  delegate_to: localhost
  check_mode: false
  when: monitoring_download_binary

- name: propagate official prometheus and promtool binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}"
    dest: "{{ _prometheus_binary_install_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - prometheus
    - promtool
  notify:
    - restart prometheus
  when: monitoring_download_binary

- name: propagate official console templates
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/"
    dest: "{{ prometheus_config_dir }}/{{ item }}/"
    mode: 0644
    owner: root
    group: root
  with_items:
    - console_libraries
    - consoles
  notify:
    - restart prometheus
  when: monitoring_download_binary

- name: Set prometheus external metrics path
  set_fact:
    prometheus_metrics_path: "/{{ ( prometheus_web_external_url + '/metrics' ) | regex_replace('^(.*://)?(.*?)/') }}"

- name: configure prometheus
  template:
    src: "{{ prometheus_config_file }}"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"
  notify:
    - reload prometheus
  tags: configure

- name: configure Prometheus web
  copy:
    content: "{{ prometheus_web_config | to_nice_yaml(indent=2) }}"
    dest: "{{ prometheus_config_dir }}/web.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640

- name: configure prometheus static targets
  copy:
    content: |
      #jinja2: lstrip_blocks: True
      {{ item.value | to_nice_yaml(indent=2) }}
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
  with_dict: "{{ prometheus_targets }}"
  when: prometheus_targets != {}

- name: copy Prometheus rules file
  copy:
    src: "{{item}}"
    dest: "{{ prometheus_config_dir }}/rules/{{item}}"
  with_items: "{{ rules_list }}"
  when: rules_list | length > 0
  notify:
    - restart prometheus

- name: create prometheus systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus
