---
# tasks file for monica
- name: Check if monica already exists.
  stat:
    path: "/var/www/html/{{monica_domain}}/composer.json"
  register: monica_composer_json

- block:
    - name: Set monica archive file name
      set_fact:
        monica_archive_file_name: "monica-v{{ monica_version }}.tar.bz2"

    - name: Download monica source
      get_url:
        url: "https://github.com/monicahq/monica/releases/download/v{{monica_version}}/{{monica_archive_file_name}}"
        dest: "/tmp/{{monica_archive_file_name}}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Download monica source verify key
      get_url:
        url: "https://github.com/monicahq/monica/releases/download/v{{monica_version}}/{{monica_archive_file_name}}.asc"
        dest: "/tmp/{{monica_archive_file_name}}.asc"
      register: _download_archive_key
      until: _download_archive_key is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Import monica GPG key
      command: "gpg --receive-keys 0D3C0C45EF32ADC1D8D3942AED477F48B4AE3808"

    - name: Vefiry archive file gpg key
      command: "gpg --verify {{monica_archive_file_name}}.asc {{monica_archive_file_name}}"
      args:
        chdir: "/tmp"

    - name: ensure {{monica_domain}} directory exists
      file:
        path: "/var/www/html/{{monica_domain}}"
        state: directory

    - name: Unpack archive file
      unarchive:
        src: "/tmp/{{monica_archive_file_name}}"
        dest: "/var/www/html/{{monica_domain}}"
        extra_opts: [--strip-components=1]
        remote_src: yes
  when: not monica_composer_json.stat.exists

- name: Copy .env file
  template:
    src: .env.j2
    dest: "/var/www/html/{{monica_domain}}/.env"
    mode: "0644"

- name: Create robots.txt
  copy:
    content: "User-agent: *\nDisallow: /\n"
    dest: "/var/www/html/{{monica_domain}}/robots.txt"

- name: Ensure {{monica_domain}} directory permission for webserver
  file:
    path: /var/www/html/{{monica_domain}}
    owner: www-data
    group: www-data
    mode: "0755"
    recurse: yes

- name: Ensure storage directory permission for webserver
  file:
    path: /var/www/html/{{monica_domain}}/storage
    owner: www-data
    group: www-data
    mode: "0775"
    recurse: yes

- name: Ensure cache directory permission for webserver
  file:
    path: /var/www/html/{{monica_domain}}/bootstrap/cache
    owner: www-data
    group: www-data
    mode: "0775"
    recurse: yes

- name: Ensure {{monica_domain}} file exists for nginx
  template:
    src: nginx_http.conf.j2
    dest: /etc/nginx/sites-available/{{monica_domain}}
    mode: "0644"
  notify: Restart nginx

- name: Enable {{monica_domain}} nginx config
  file:
    src: /etc/nginx/sites-available/{{monica_domain}}
    dest: /etc/nginx/sites-enabled/{{monica_domain}}
    state: link
  notify: Restart nginx

- name: Create and Install Cert Using {{ certbot_plugin }} Plugin for {{monica_domain}}
  command: "certbot --{{ certbot_plugin }} -d  {{ monica_domain }} -m {{ certbot_mail_address }} --agree-tos --noninteractive --redirect"
  when: is_local is defined and not is_local

- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{monica_domain}}
    mode: "0644"
  when: is_local is defined and not is_local
  notify:
    - Restart nginx

- name: Flush all handlers at this point
  meta: flush_handlers

- name: If its first time install then run
  debug:
    msg: "php artisan setup:production --email=your@email.com --password=yourpassword -v"
  when: not monica_composer_json.stat.exists
# todo: need to configure cron
# https://github.com/monicahq/monica/blob/master/docs/installation/providers/ubuntu.md#4-configure-cron-job
