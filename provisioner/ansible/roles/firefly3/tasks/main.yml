---
# tasks file for firefly3
- name: Install dependency packages
  apt:
    name: language-pack-nl-base
  when: not firefly3_update

- name: Generate locale
  shell: locale-gen
  when: not firefly3_update

- name: "Delete {{firefly3_domain}} directory"
  file:
    path: "/var/www/html/{{firefly3_domain}}"
    state: absent
  when: firefly3_update

- name: "Ensure {{firefly3_domain}} directory exists"
  file:
    path: "/var/www/html/{{firefly3_domain}}"
    owner: www-data
    group: www-data
    mode: "0755"
    state: directory
    recurse: true

- name: Check if firefly III already exists.
  stat:
    path: "/var/www/html/{{firefly3_domain}}/composer.json"
  register: firefly3_composer_json

- block:
    - name: Set firefly III archive file name
      set_fact:
        ff3_archive_file_name: "FireflyIII-v{{ firefly3_version }}.tar.gz"

    - name: Download firefly III source
      get_url:
        url: "https://github.com/firefly-iii/firefly-iii/releases/download/v{{firefly3_version}}/{{ff3_archive_file_name}}"
        dest: "/tmp/{{ff3_archive_file_name}}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Download firefly III source verify key
      get_url:
        url: "https://github.com/firefly-iii/firefly-iii/releases/download/v{{firefly3_version}}/{{ff3_archive_file_name}}.sha256"
        dest: "/tmp/{{ff3_archive_file_name}}.sha256"
      register: _download_archive_key
      until: _download_archive_key is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Vefiry archive file intigrity
      command: "sha256sum -c {{ff3_archive_file_name}}.sha256"
      args:
        chdir: "/tmp"

    - name: Unpack archive file
      unarchive:
        src: "/tmp/{{ff3_archive_file_name}}"
        dest: "/var/www/html/{{firefly3_domain}}"
        extra_opts: [--strip-components=1]
        remote_src: yes
  when: not firefly3_composer_json.stat.exists or firefly3_update

- name: Copy .env file
  template:
    src: .env.j2
    dest: "/var/www/html/{{firefly3_domain}}/.env"
    mode: "0644"

- name: Ensure {{firefly3_domain}} directory permission for webserver
  file:
    path: /var/www/html/{{firefly3_domain}}
    owner: www-data
    group: www-data
    mode: "0755"
    recurse: yes

- name: Ensure storage directory permission for webserver
  file:
    path: /var/www/html/{{firefly3_domain}}/storage
    owner: www-data
    group: www-data
    mode: "0775"
    recurse: yes

- name: Ensure cache directory permission for webserver
  file:
    path: /var/www/html/{{firefly3_domain}}/bootstrap/cache
    owner: www-data
    group: www-data
    mode: "0775"
    recurse: yes

- name: Upgrade DB changes
  become_user: www-data
  shell: php artisan firefly-iii:upgrade-database
  args:
    chdir: "/var/www/html/{{firefly3_domain}}"

- name: correct-database
  become_user: www-data
  shell: php artisan firefly-iii:correct-database
  args:
    chdir: "/var/www/html/{{firefly3_domain}}"

- name: report-integrity
  become_user: www-data
  shell: php artisan firefly-iii:report-integrity
  args:
    chdir: "/var/www/html/{{firefly3_domain}}"

- name: Ensure {{firefly3_domain}} file exists for nginx
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{firefly3_domain}}
    mode: "0644"
  vars:
    enable_ssl: False
  notify: Restart nginx
  when: not firefly3_update

- name: Enable {{firefly3_domain}} nginx config
  file:
    src: /etc/nginx/sites-available/{{firefly3_domain}}
    dest: /etc/nginx/sites-enabled/{{firefly3_domain}}
    state: link
  notify: Restart nginx
  when: not firefly3_update

- name: Create and Install Cert Using {{ certbot_plugin }} Plugin for {{firefly3_domain}}
  command: "certbot --{{ certbot_plugin }} -d  {{ firefly3_domain }} -m {{ certbot_mail_address }} --agree-tos --noninteractive --redirect"
  when: firefly3_enable_ssl and not firefly3_update

- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{firefly3_domain}}
    mode: "0644"
  notify:
    - Restart nginx
  when: firefly3_enable_ssl and not firefly3_update

- name: Flush all handlers at this point
  meta: flush_handlers
